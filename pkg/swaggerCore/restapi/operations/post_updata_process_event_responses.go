// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"augeu/public/pkg/swaggerCore/models"
)

// PostUpdataProcessEventOKCode is the HTTP code returned for type PostUpdataProcessEventOK
const PostUpdataProcessEventOKCode int = 200

/*
PostUpdataProcessEventOK 上传成功

swagger:response postUpdataProcessEventOK
*/
type PostUpdataProcessEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewPostUpdataProcessEventOK creates PostUpdataProcessEventOK with default headers values
func NewPostUpdataProcessEventOK() *PostUpdataProcessEventOK {

	return &PostUpdataProcessEventOK{}
}

// WithPayload adds the payload to the post updata process event o k response
func (o *PostUpdataProcessEventOK) WithPayload(payload *models.SuccessResponse) *PostUpdataProcessEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata process event o k response
func (o *PostUpdataProcessEventOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataProcessEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataProcessEventBadRequestCode is the HTTP code returned for type PostUpdataProcessEventBadRequest
const PostUpdataProcessEventBadRequestCode int = 400

/*
PostUpdataProcessEventBadRequest 输入参数错误

swagger:response postUpdataProcessEventBadRequest
*/
type PostUpdataProcessEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequestError `json:"body,omitempty"`
}

// NewPostUpdataProcessEventBadRequest creates PostUpdataProcessEventBadRequest with default headers values
func NewPostUpdataProcessEventBadRequest() *PostUpdataProcessEventBadRequest {

	return &PostUpdataProcessEventBadRequest{}
}

// WithPayload adds the payload to the post updata process event bad request response
func (o *PostUpdataProcessEventBadRequest) WithPayload(payload *models.BadRequestError) *PostUpdataProcessEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata process event bad request response
func (o *PostUpdataProcessEventBadRequest) SetPayload(payload *models.BadRequestError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataProcessEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataProcessEventForbiddenCode is the HTTP code returned for type PostUpdataProcessEventForbidden
const PostUpdataProcessEventForbiddenCode int = 403

/*
PostUpdataProcessEventForbidden 没有权限

swagger:response postUpdataProcessEventForbidden
*/
type PostUpdataProcessEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedError `json:"body,omitempty"`
}

// NewPostUpdataProcessEventForbidden creates PostUpdataProcessEventForbidden with default headers values
func NewPostUpdataProcessEventForbidden() *PostUpdataProcessEventForbidden {

	return &PostUpdataProcessEventForbidden{}
}

// WithPayload adds the payload to the post updata process event forbidden response
func (o *PostUpdataProcessEventForbidden) WithPayload(payload *models.UnauthorizedError) *PostUpdataProcessEventForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata process event forbidden response
func (o *PostUpdataProcessEventForbidden) SetPayload(payload *models.UnauthorizedError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataProcessEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataProcessEventInternalServerErrorCode is the HTTP code returned for type PostUpdataProcessEventInternalServerError
const PostUpdataProcessEventInternalServerErrorCode int = 500

/*
PostUpdataProcessEventInternalServerError 内部错误

swagger:response postUpdataProcessEventInternalServerError
*/
type PostUpdataProcessEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ActionFailure `json:"body,omitempty"`
}

// NewPostUpdataProcessEventInternalServerError creates PostUpdataProcessEventInternalServerError with default headers values
func NewPostUpdataProcessEventInternalServerError() *PostUpdataProcessEventInternalServerError {

	return &PostUpdataProcessEventInternalServerError{}
}

// WithPayload adds the payload to the post updata process event internal server error response
func (o *PostUpdataProcessEventInternalServerError) WithPayload(payload *models.ActionFailure) *PostUpdataProcessEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata process event internal server error response
func (o *PostUpdataProcessEventInternalServerError) SetPayload(payload *models.ActionFailure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataProcessEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
