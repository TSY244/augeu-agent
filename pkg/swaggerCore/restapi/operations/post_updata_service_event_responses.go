// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"augeu/public/pkg/swaggerCore/models"
)

// PostUpdataServiceEventOKCode is the HTTP code returned for type PostUpdataServiceEventOK
const PostUpdataServiceEventOKCode int = 200

/*
PostUpdataServiceEventOK 上传成功

swagger:response postUpdataServiceEventOK
*/
type PostUpdataServiceEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewPostUpdataServiceEventOK creates PostUpdataServiceEventOK with default headers values
func NewPostUpdataServiceEventOK() *PostUpdataServiceEventOK {

	return &PostUpdataServiceEventOK{}
}

// WithPayload adds the payload to the post updata service event o k response
func (o *PostUpdataServiceEventOK) WithPayload(payload *models.SuccessResponse) *PostUpdataServiceEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata service event o k response
func (o *PostUpdataServiceEventOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataServiceEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataServiceEventBadRequestCode is the HTTP code returned for type PostUpdataServiceEventBadRequest
const PostUpdataServiceEventBadRequestCode int = 400

/*
PostUpdataServiceEventBadRequest 输入参数错误

swagger:response postUpdataServiceEventBadRequest
*/
type PostUpdataServiceEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequestError `json:"body,omitempty"`
}

// NewPostUpdataServiceEventBadRequest creates PostUpdataServiceEventBadRequest with default headers values
func NewPostUpdataServiceEventBadRequest() *PostUpdataServiceEventBadRequest {

	return &PostUpdataServiceEventBadRequest{}
}

// WithPayload adds the payload to the post updata service event bad request response
func (o *PostUpdataServiceEventBadRequest) WithPayload(payload *models.BadRequestError) *PostUpdataServiceEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata service event bad request response
func (o *PostUpdataServiceEventBadRequest) SetPayload(payload *models.BadRequestError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataServiceEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataServiceEventForbiddenCode is the HTTP code returned for type PostUpdataServiceEventForbidden
const PostUpdataServiceEventForbiddenCode int = 403

/*
PostUpdataServiceEventForbidden 没有权限

swagger:response postUpdataServiceEventForbidden
*/
type PostUpdataServiceEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedError `json:"body,omitempty"`
}

// NewPostUpdataServiceEventForbidden creates PostUpdataServiceEventForbidden with default headers values
func NewPostUpdataServiceEventForbidden() *PostUpdataServiceEventForbidden {

	return &PostUpdataServiceEventForbidden{}
}

// WithPayload adds the payload to the post updata service event forbidden response
func (o *PostUpdataServiceEventForbidden) WithPayload(payload *models.UnauthorizedError) *PostUpdataServiceEventForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata service event forbidden response
func (o *PostUpdataServiceEventForbidden) SetPayload(payload *models.UnauthorizedError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataServiceEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataServiceEventInternalServerErrorCode is the HTTP code returned for type PostUpdataServiceEventInternalServerError
const PostUpdataServiceEventInternalServerErrorCode int = 500

/*
PostUpdataServiceEventInternalServerError 内部错误

swagger:response postUpdataServiceEventInternalServerError
*/
type PostUpdataServiceEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ActionFailure `json:"body,omitempty"`
}

// NewPostUpdataServiceEventInternalServerError creates PostUpdataServiceEventInternalServerError with default headers values
func NewPostUpdataServiceEventInternalServerError() *PostUpdataServiceEventInternalServerError {

	return &PostUpdataServiceEventInternalServerError{}
}

// WithPayload adds the payload to the post updata service event internal server error response
func (o *PostUpdataServiceEventInternalServerError) WithPayload(payload *models.ActionFailure) *PostUpdataServiceEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata service event internal server error response
func (o *PostUpdataServiceEventInternalServerError) SetPayload(payload *models.ActionFailure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataServiceEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
