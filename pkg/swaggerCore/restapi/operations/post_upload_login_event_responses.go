// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"augeu/public/pkg/swaggerCore/models"
)

// PostUploadLoginEventOKCode is the HTTP code returned for type PostUploadLoginEventOK
const PostUploadLoginEventOKCode int = 200

/*
PostUploadLoginEventOK 事件日志上传成功

swagger:response postUploadLoginEventOK
*/
type PostUploadLoginEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.UploadLoginEventResponse `json:"body,omitempty"`
}

// NewPostUploadLoginEventOK creates PostUploadLoginEventOK with default headers values
func NewPostUploadLoginEventOK() *PostUploadLoginEventOK {

	return &PostUploadLoginEventOK{}
}

// WithPayload adds the payload to the post upload login event o k response
func (o *PostUploadLoginEventOK) WithPayload(payload *models.UploadLoginEventResponse) *PostUploadLoginEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload login event o k response
func (o *PostUploadLoginEventOK) SetPayload(payload *models.UploadLoginEventResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadLoginEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUploadLoginEventBadRequestCode is the HTTP code returned for type PostUploadLoginEventBadRequest
const PostUploadLoginEventBadRequestCode int = 400

/*
PostUploadLoginEventBadRequest 输入参数错误

swagger:response postUploadLoginEventBadRequest
*/
type PostUploadLoginEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequestError `json:"body,omitempty"`
}

// NewPostUploadLoginEventBadRequest creates PostUploadLoginEventBadRequest with default headers values
func NewPostUploadLoginEventBadRequest() *PostUploadLoginEventBadRequest {

	return &PostUploadLoginEventBadRequest{}
}

// WithPayload adds the payload to the post upload login event bad request response
func (o *PostUploadLoginEventBadRequest) WithPayload(payload *models.BadRequestError) *PostUploadLoginEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload login event bad request response
func (o *PostUploadLoginEventBadRequest) SetPayload(payload *models.BadRequestError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadLoginEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUploadLoginEventForbiddenCode is the HTTP code returned for type PostUploadLoginEventForbidden
const PostUploadLoginEventForbiddenCode int = 403

/*
PostUploadLoginEventForbidden 没有权限

swagger:response postUploadLoginEventForbidden
*/
type PostUploadLoginEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedError `json:"body,omitempty"`
}

// NewPostUploadLoginEventForbidden creates PostUploadLoginEventForbidden with default headers values
func NewPostUploadLoginEventForbidden() *PostUploadLoginEventForbidden {

	return &PostUploadLoginEventForbidden{}
}

// WithPayload adds the payload to the post upload login event forbidden response
func (o *PostUploadLoginEventForbidden) WithPayload(payload *models.UnauthorizedError) *PostUploadLoginEventForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload login event forbidden response
func (o *PostUploadLoginEventForbidden) SetPayload(payload *models.UnauthorizedError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadLoginEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUploadLoginEventInternalServerErrorCode is the HTTP code returned for type PostUploadLoginEventInternalServerError
const PostUploadLoginEventInternalServerErrorCode int = 500

/*
PostUploadLoginEventInternalServerError 内部错误

swagger:response postUploadLoginEventInternalServerError
*/
type PostUploadLoginEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ActionFailure `json:"body,omitempty"`
}

// NewPostUploadLoginEventInternalServerError creates PostUploadLoginEventInternalServerError with default headers values
func NewPostUploadLoginEventInternalServerError() *PostUploadLoginEventInternalServerError {

	return &PostUploadLoginEventInternalServerError{}
}

// WithPayload adds the payload to the post upload login event internal server error response
func (o *PostUploadLoginEventInternalServerError) WithPayload(payload *models.ActionFailure) *PostUploadLoginEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload login event internal server error response
func (o *PostUploadLoginEventInternalServerError) SetPayload(payload *models.ActionFailure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadLoginEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
