// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"augeu/public/pkg/swaggerCore/models"
)

// PostUpdataSystemEventOKCode is the HTTP code returned for type PostUpdataSystemEventOK
const PostUpdataSystemEventOKCode int = 200

/*
PostUpdataSystemEventOK 上传成功

swagger:response postUpdataSystemEventOK
*/
type PostUpdataSystemEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewPostUpdataSystemEventOK creates PostUpdataSystemEventOK with default headers values
func NewPostUpdataSystemEventOK() *PostUpdataSystemEventOK {

	return &PostUpdataSystemEventOK{}
}

// WithPayload adds the payload to the post updata system event o k response
func (o *PostUpdataSystemEventOK) WithPayload(payload *models.SuccessResponse) *PostUpdataSystemEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata system event o k response
func (o *PostUpdataSystemEventOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataSystemEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataSystemEventBadRequestCode is the HTTP code returned for type PostUpdataSystemEventBadRequest
const PostUpdataSystemEventBadRequestCode int = 400

/*
PostUpdataSystemEventBadRequest 输入参数错误

swagger:response postUpdataSystemEventBadRequest
*/
type PostUpdataSystemEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequestError `json:"body,omitempty"`
}

// NewPostUpdataSystemEventBadRequest creates PostUpdataSystemEventBadRequest with default headers values
func NewPostUpdataSystemEventBadRequest() *PostUpdataSystemEventBadRequest {

	return &PostUpdataSystemEventBadRequest{}
}

// WithPayload adds the payload to the post updata system event bad request response
func (o *PostUpdataSystemEventBadRequest) WithPayload(payload *models.BadRequestError) *PostUpdataSystemEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata system event bad request response
func (o *PostUpdataSystemEventBadRequest) SetPayload(payload *models.BadRequestError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataSystemEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataSystemEventForbiddenCode is the HTTP code returned for type PostUpdataSystemEventForbidden
const PostUpdataSystemEventForbiddenCode int = 403

/*
PostUpdataSystemEventForbidden 没有权限

swagger:response postUpdataSystemEventForbidden
*/
type PostUpdataSystemEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedError `json:"body,omitempty"`
}

// NewPostUpdataSystemEventForbidden creates PostUpdataSystemEventForbidden with default headers values
func NewPostUpdataSystemEventForbidden() *PostUpdataSystemEventForbidden {

	return &PostUpdataSystemEventForbidden{}
}

// WithPayload adds the payload to the post updata system event forbidden response
func (o *PostUpdataSystemEventForbidden) WithPayload(payload *models.UnauthorizedError) *PostUpdataSystemEventForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata system event forbidden response
func (o *PostUpdataSystemEventForbidden) SetPayload(payload *models.UnauthorizedError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataSystemEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUpdataSystemEventInternalServerErrorCode is the HTTP code returned for type PostUpdataSystemEventInternalServerError
const PostUpdataSystemEventInternalServerErrorCode int = 500

/*
PostUpdataSystemEventInternalServerError 内部错误

swagger:response postUpdataSystemEventInternalServerError
*/
type PostUpdataSystemEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ActionFailure `json:"body,omitempty"`
}

// NewPostUpdataSystemEventInternalServerError creates PostUpdataSystemEventInternalServerError with default headers values
func NewPostUpdataSystemEventInternalServerError() *PostUpdataSystemEventInternalServerError {

	return &PostUpdataSystemEventInternalServerError{}
}

// WithPayload adds the payload to the post updata system event internal server error response
func (o *PostUpdataSystemEventInternalServerError) WithPayload(payload *models.ActionFailure) *PostUpdataSystemEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post updata system event internal server error response
func (o *PostUpdataSystemEventInternalServerError) SetPayload(payload *models.ActionFailure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUpdataSystemEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
